import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns



#import and display dataset
df=pd.read_csv("C:/Users/nidhe/Desktop/GITHUB/multiple regression/winequality-red.csv")
df.info()
df.head().transpose()
df.tail()
df.isnull().sum()
df.describe().transpose() 
df['pH'].head()


#eda
sns.countplot(x='fixed acidity',hue='quality',data=df)
plt.scatter(x='quality',y='alcohol',data=df)
plt.scatter(x='quality',y='citric acid',data=df)
sns.barplot(x = 'quality', y = 'citric acid', data =df)
sns.barplot(x = 'quality', y = 'alcohol', data =df)
sns.barplot(x = 'quality', y = 'density', data =df)
sns.barplot(x = 'quality', y = 'sulphates', data =df)
plt.scatter(x='pH',y='citric acid',data=df)
plt.scatter(x='fixed acidity',y='citric acid',data=df)

c=df.corr('pearson')
df.quality.value_counts(normalize=True)
np.corrcoef(df['fixed acidity'],df['quality'])

#split data
X=df.drop(['fixed acidity','residual sugar','free sulfur dioxide'],axis=1)
y=df.iloc[:,-1]
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=101)

#model selection
from sklearn.linear_model import LinearRegression
lmod1=LinearRegression()
lmod1.fit(X_train,y_train)

predictions=lmod1.predict(X_test)

#model validation

plt.scatter(pr,y_test,marker="D",cmap='Greys')
sns.distplot((y_test-predictions)) #plotting residuals

from sklearn import metrics

metrics.mean_absolute_error(y_test,predictions)
metrics.mean_squared_error(y_test, predictions)
np.sqrt(metrics.mean_squared_error(y_test, predictions))
#Check coefficients
lmod1.coef_
cdf=pd.DataFrame(lmod1.coef_,X.columns,columns=['Coef'])
print(cdf)



